{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst http = require('http');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst server = http.createServer((req, res) => {\n  if (req.url === '/') {\n    fs.readFile(path.join(__dirname, 'public', 'index.html'), (err, content) => {\n      if (err) throw err;\n      res.writeHead(200, {\n        'Content-Type': 'text/html'\n      });\n      res.end(content);\n    });\n  }\n\n  if (req.url === '/about') {\n    fs.readFile(path.join(__dirname, 'public', 'about.html'), (err, content) => {\n      if (err) throw err;\n      res.writeHead(200, {\n        'Content-Type': 'text/html'\n      });\n      res.end(content);\n    });\n  }\n});\nconst PORT = process.env.PORT || 5000;\nserver.listen(PORT, () => console.log(`Server running on port ${PORT}`));\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n})), rootElement);","map":{"version":3,"sources":["C:/my-app/src/index.js"],"names":["React","ReactDOM","App","http","require","path","fs","server","createServer","req","res","url","readFile","join","__dirname","err","content","writeHead","end","PORT","process","env","listen","console","log","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMG,MAAM,GAAGJ,IAAI,CAACK,YAAL,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3C,MAAGD,GAAG,CAACE,GAAJ,KAAY,GAAf,EAAoB;AAChBL,IAAAA,EAAE,CAACM,QAAH,CAAYP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAZ,EAA0D,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACxE,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTL,MAAAA,GAAG,CAACO,SAAJ,CAAc,GAAd,EAAmB;AAAE,wBAAgB;AAAlB,OAAnB;AACAP,MAAAA,GAAG,CAACQ,GAAJ,CAAQF,OAAR;AACH,KAJD;AAMH;;AACD,MAAGP,GAAG,CAACE,GAAJ,KAAY,QAAf,EAAyB;AACrBL,IAAAA,EAAE,CAACM,QAAH,CAAYP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAZ,EAA0D,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACxE,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTL,MAAAA,GAAG,CAACO,SAAJ,CAAc,GAAd,EAAmB;AAAE,wBAAgB;AAAlB,OAAnB;AACAP,MAAAA,GAAG,CAACQ,GAAJ,CAAQF,OAAR;AACH,KAJD;AAMH;AACJ,CAjBc,CAAf;AAmBA,MAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAZ,MAAM,CAACe,MAAP,CAAcH,IAAd,EAAoB,MAAMI,OAAO,CAACC,GAAR,CAAa,0BAAyBL,IAAK,EAA3C,CAA1B;AACA,MAAMM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA1B,QAAQ,CAAC2B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEH,WAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst http = require('http');\nconst path = require('path');\nconst fs = require('fs');\n\nconst server = http.createServer((req, res) => {\n    if(req.url === '/') {\n        fs.readFile(path.join(__dirname, 'public', 'index.html'), (err, content) => {\n            if (err) throw err;\n            res.writeHead(200, { 'Content-Type': 'text/html' });\n            res.end(content);\n        })\n        \n    }\n    if(req.url === '/about') {\n        fs.readFile(path.join(__dirname, 'public', 'about.html'), (err, content) => {\n            if (err) throw err;\n            res.writeHead(200, { 'Content-Type': 'text/html' });\n            res.end(content);\n        })\n        \n    }\n});\n\nconst PORT = process.env.PORT || 5000;\n\nserver.listen(PORT, () => console.log(`Server running on port ${PORT}`));\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"]},"metadata":{},"sourceType":"module"}